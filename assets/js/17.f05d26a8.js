(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{395:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型"}},[s._v("#")]),s._v(" String 类型")]),s._v(" "),a("p",[s._v("生成字符串类型方法")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "123"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "123"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 字符串对象包裹，使用操作符计算的时候  aa 是 "123"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 字符串  "1,2,3"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类似 [1,2,3].join(',')")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "[object Object]"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// toString()方法本质就是调用 String({})")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[s._v("#")]),s._v(" 属性")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("length")])]),s._v(" "),a("p",[s._v("返回字符串的长度。")])])]),s._v(" "),a("h3",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[s._v("#")]),s._v(" 查询")]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("search(regexp|string)")])]),s._v(" "),a("p",[s._v("返回匹配给定正则表达式或子串的索引值（位置），未找到返回 -1")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/23/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("indexOf(searchValue[, fromIndex])")])]),s._v(" "),a("p",[s._v("返回字符串中指定文本首次出现的索引（位置），未找到返回 -1")]),s._v(" "),a("p",[s._v("可选的起始位置索引")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("laseIndexOf(searchValue[, fromIndex])")])]),s._v(" "),a("p",[s._v("返回指定文本在字符串中最后一次出现的索引（位置），未找到返回 -1")]),s._v(" "),a("p",[s._v("可选的起始位置索引")]),s._v(" "),a("p",[s._v("向后进行检索（从尾到头），这意味着：假如第二个参数是 50，则从位置 50 开始检索，直到字符串的起点。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("includes(searchString[, position])")])]),s._v(" "),a("p",[s._v("返回布尔值，判断原字符串是否包含给定的字符串。position表示开始查找的索引，默认为 0 。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("starts​With(searchString [, position])")])]),s._v(" "),a("p",[s._v("返回布尔值，判断原字符串是否是以另外一个给定的子字符串“开头”。 "),a("code",[s._v("position")]),s._v(" 表示开始查找的索引，默认为 0 。")]),s._v(" "),a("p",[s._v("设置 "),a("code",[s._v("position")]),s._v(" 相当于先调用 "),a("code",[s._v("slice")]),s._v(" 截取字符串后 看是否与给定字符串"),a("strong",[s._v("开头")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("end​With(searchString [, position])")])]),s._v(" "),a("p",[s._v("返回布尔值，判断原字符串是否是以另外一个给定的子字符串“结尾”。 "),a("code",[s._v("position")]),s._v(" 表示开始查找的索引，默认为 0 。")]),s._v(" "),a("p",[s._v("设置 "),a("code",[s._v("position")]),s._v(" 相当于先调用 "),a("code",[s._v("slice")]),s._v(" 截取字符串后 看是否与给定字符串"),a("strong",[s._v("结尾")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("match(regexp)")])]),s._v(" "),a("p",[s._v("检索返回原字符串匹配正则表达式的结果。")]),s._v(" "),a("p",[s._v("正则有全局匹配标识符 g 的时候，返回每个匹配到的子串。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123123123'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "123123123"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/123/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["123", index: 0, input: "123123123", groups: undefined]')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/123/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// (3) ["123", "123", "123"]')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/1231/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["1231"]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("matchAll(regexp)")])]),s._v(" "),a("p",[s._v("返回一个包含所有匹配正则表达式及分组捕获结果的迭代器。")]),s._v(" "),a("p",[s._v("正则表达式必须有 全局匹配标识符 g")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123123123'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "123123123"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("matchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/1231/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// String.prototype.matchAll called with a non-global RegExp argument")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" aa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("matchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/123/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" dd "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" cc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// VM1548:1 ["123", index: 0, input: "123123123", groups: undefined]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// VM1548:1 ["123", index: 3, input: "123123123", groups: undefined]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// VM1548:1 ["123", index: 6, input: "123123123", groups: undefined]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"截取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#截取"}},[s._v("#")]),s._v(" 截取")]),s._v(" "),a("p",[s._v("字符串截取方法")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("slice(begin[, end])")])]),s._v(" "),a("p",[s._v("返回截取的索引之间的字符串，没有则返回孔字符串")]),s._v(" "),a("p",[s._v("begin end 如果是负值，则从后往前数的索引。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcdefghi'")]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "abc"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "abcdef"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "gh"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("substring(start[, end])")])]),s._v(" "),a("p",[s._v("返回截取的索引之间的字符串，没有则返回孔字符串, 与 slice 基本上一致。")]),s._v(" "),a("p",[s._v("begin end 不能是负值。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcdefghi'")]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "abcdefghi"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//  "abc"   ')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("substr(start[, length])")])]),s._v(" "),a("p",[s._v("返回从开始索引 start 开始截取的指定长度 length 的字符串")]),s._v(" "),a("p",[s._v("length 缺省则截取到末尾。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcdefghi'")]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "abcdefghi"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "abcd"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "ghi"')]),s._v("\naa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "gh"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("split(separator,howmany)")])]),s._v(" "),a("p",[a("code",[s._v("separator")]),s._v("\t必需。字符串或正则表达式，从该参数指定的地方分割 "),a("code",[s._v("stringObject。")])]),s._v(" "),a("p",[a("code",[s._v("howmany")]),s._v("\t可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("trim()")])]),s._v(" "),a("p",[s._v("返回一个将原字符的两端删除空白字符。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("trim​Right()")])]),s._v(" "),a("p",[s._v("返回一个将原字符的右端删除空白字符。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("trim​Left()")])]),s._v(" "),a("p",[s._v("返回一个将原字符的左端删除空白字符。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("chartAt(index)")])]),s._v(" "),a("p",[s._v("从原字符串中返回指定索引的字符。")])])]),s._v(" "),a("h3",{attrs:{id:"拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接"}},[s._v("#")]),s._v(" 拼接")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("concat(stringX,stringX,...,stringX)")])]),s._v(" "),a("p",[a("code",[s._v("stringX")]),s._v("\t必需。将被连接为一个字符串的一个或多个字符串对象。")]),s._v(" "),a("p",[s._v("方法将把它的所有参数转换成字符串，然后按顺序连接到字符串 "),a("code",[s._v("stringObject")]),s._v(" 的尾部，并返回连接后的字符串。")]),s._v(" "),a("p",[s._v("不改变原字符串")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("pad​Start(targetLength [, padString])")])]),s._v(" "),a("p",[s._v("返回用给定的字符串填充原字符串的末尾，以达到指定长度。 "),a("code",[s._v("padString")]),s._v(" 表示用于填充的字符串，默认为"),a("code",[s._v('" "')]),s._v("。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("padEnd(targetLength [, padString])")])]),s._v(" "),a("p",[s._v("返回用给定的字符串填充原字符串的开头，以达到指定长度。 "),a("code",[s._v("padString")]),s._v(" 表示用于填充的字符串，默认为"),a("code",[s._v('" "')]),s._v("。")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("repeat(count)")])]),s._v(" "),a("p",[s._v("重复 "),a("code",[s._v("count")]),s._v(" 次字符串，返回新的字符串")])])]),s._v(" "),a("h3",{attrs:{id:"查找替换-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找替换-replace"}},[s._v("#")]),s._v(" 查找替换 （replace）")]),s._v(" "),a("p",[s._v("replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。")]),s._v(" "),a("p",[a("code",[s._v("stringObject.replace(regexp/substr,replacement)")])]),s._v(" "),a("p",[a("code",[s._v("regexp/substr")])]),s._v(" "),a("p",[s._v("必需。规定子字符串或要替换的模式的 RegExp 对象。")]),s._v(" "),a("p",[s._v("请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。")]),s._v(" "),a("p",[a("code",[s._v("replacement")]),s._v("\t必需。一个字符串值。规定了替换文本或生成替换文本的函数。")]),s._v(" "),a("h5",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[s._v("#")]),s._v(" 说明")]),s._v(" "),a("p",[s._v("字符串 "),a("code",[s._v("stringObject")]),s._v(" 的 "),a("code",[s._v("replace()")]),s._v(" 方法执行的是查找并替换的操作。它将在 "),a("code",[s._v("stringObject")]),s._v(" 中查找与 "),a("code",[s._v("regexp")]),s._v(" 相匹配的子字符串，然后用 "),a("code",[s._v("replacement")]),s._v(" 来替换这些子串。如果 "),a("code",[s._v("regexp")]),s._v(" 具有全局标志 "),a("code",[s._v("g")]),s._v("，那么 "),a("code",[s._v("replace()")]),s._v(" 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。")]),s._v(" "),a("p",[a("code",[s._v("replacement")]),s._v(" 可以是字符串，也可以是函数。如果它是字符串，那么每个匹配都将由字符串替换。但是 "),a("code",[s._v("replacement")]),s._v(" 中的 "),a("code",[s._v("$")]),s._v(" 字符具有特定的含义。如下表所示，它说明从模式匹配得到的字符串将用于替换。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字符")]),s._v(" "),a("th",[s._v("替换文本")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("$1、$2、...、$99")]),s._v(" "),a("td",[s._v("与 regexp 中的第 1 到第 99 个子表达式相匹配的文本。")])]),s._v(" "),a("tr",[a("td",[s._v("$&")]),s._v(" "),a("td",[s._v("与 regexp 相匹配的子串。")])]),s._v(" "),a("tr",[a("td",[s._v("$`")]),s._v(" "),a("td",[s._v("位于匹配子串左侧的文本。")])]),s._v(" "),a("tr",[a("td",[s._v("$'")]),s._v(" "),a("td",[s._v("位于匹配子串右侧的文本。")])]),s._v(" "),a("tr",[a("td",[s._v("$$")]),s._v(" "),a("td",[s._v("直接量符号。")])])])]),s._v(" "),a("h3",{attrs:{id:"转换大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换大小写"}},[s._v("#")]),s._v(" 转换大小写")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("toLower​Case()")])]),s._v(" "),a("p",[s._v("返回一个将原字符串转化成小写的字符串。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("toUpper​Case()")])]),s._v(" "),a("p",[s._v("返回一个将原字符串转化成大写的字符串。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);